<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>28</ID>
      <Description>"Character Related"</Description>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"50Sec Godmode"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//50Sec Godmode v92
//TheonlyTazz
[Enable]
00D16B9F:
db 7E
00D16BBA:
db D4 36
[Disable]
00D16B9F:
db 7F
00D16BBA:
db 24 FA
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"7 Guard ( Demon Slayer )"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
//Credits to Benny
alloc(Godmode,64)
alloc(Counter,1)
label(Reset)

00D15DAB:
  //0B bytes override
  jmp Godmode
  nop
  nop
  nop
  nop
  nop
  nop

Godmode:
  sub ecx,edx
  cmp ecx,esi
  mov edi,1
  cmp [Counter],07
  jge Reset
  inc [Counter]
  jmp 00D15DAB+0B //0B bytes override

Reset:
  mov [Counter],00
  jmp 00D15DC5

[disable]
00D15DAB:
  sub ecx,edx
  cmp ecx,edi
  mov edi,1
  jae 00D15DC5

dealloc(Godmode)
dealloc(Counter)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"7 Miss"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
//Credits to Cam1596
alloc(Miss,60)
label(MissReset)

00D16B60:
jmp Miss
db 90 90

Miss:
  inc [Miss+48]
  cmp dword ptr [Miss+48],07
  jg MissReset
  mov [esp+0000011C],00 //this is a miss hit
  jmp 00D16B60+37

MissReset:
  mov [Miss+48],00
  mov esi,[esp+00000120]
  jmp 00D16B60+7 //this is a hit

[Disable]
dealloc(Miss)

00D16B60:
db 8B B4 24 20 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Full Map Attack"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//FMA v92
//TheonlyTazz
[enable]
00774104: // 75 ? 43 83 C5 ? EB ? 8B 44 24 ? 8B 4C 24 ? 89 34 81
db EB

[disable]
00774104:
db 75
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Fusion Attack"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Fusion Attack
//EMS v92
//updated by TheonlyTazz
[Enable]
alloc(Hook,512)
label(Return)

00774114:
jmp Hook
db 90 90 90
Return:

Hook:
mov [ecx+eax*4],esi
inc eax
cmp eax,[esp+64]
jl Hook
mov [esp+18],eax
jmp Return

[Disable]
dealloc(Hook)

00774114:
db 89 34 81 40 89 44 24 18
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Generic No Delay"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//GND v92
//TheonlyTazz
[ENABLE]
00CF4423:
db 74
0089d928:
db 00
[DISABLE]
00CF4423:
db 75
0089d928:
db 06
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Item Vac"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Semi Item Vac V92
//TheonlyTazz
[Enable]
Alloc(Hook,128)
label(DoItemVac)

registersymbol(ItemVac_X)
alloc(ItemVac_X,8)
registersymbol(ItemVac_Y)
alloc(ItemVac_Y,8)
registersymbol(Save)
alloc(Save, 2)

ItemVac_X:
dd #00000000

ItemVac_Y:
dd #00000000

Save:
db 01

00738814: // E8 ? ? ? ? 8B C8 8B 44 24 ? 89 38 5F 89 48 ? 5E C2 04 00 CC CC CC CC CC CC CC 56 - 4th result
jmp Hook

Hook:
cmp [Save], 01
jne DoItemVac
mov [Save], 00

DoItemVac:
push eax
push ecx
mov eax, [1448298] // Char Base
mov ecx, [eax+8B58] // X Offset
mov [ItemVac_X], ecx
mov ecx, [eax+8B5C] // Y Offset
mov [ItemVac_Y], ecx
pop ecx
pop eax
call 00407DB0 //Original Opcode
mov ecx,eax
mov eax,[esp+0C]
push ecx
mov ecx, [ItemVac_X]
mov [eax],ecx //X
mov ecx, [ItemVac_Y]
mov [eax+04],ecx //Y
pop ecx
pop edi
pop esi
ret 0004


[Disable]
dealloc(ItemVac_X)
dealloc(ItemVac_Y)
dealloc(Save)
dealloc(Hook)
unregistersymbol(ItemVac_X)
unregistersymbol(ItemVac_Y)
unregistersymbol(Save)

00738814:
call 00407DB0
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Jump Down Anywhere"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
//Jump Down Anywhere
// Credits to Cam1596
//EMS v92
//updated by TheonlyTazz
00CCDFE7: // 74 06 3B 5C 24 ? 75 ? 8B 4C 24 ? 6A 01
db EB

00CCE024: // 7D ? 8B 16 8B 52 ? 8D 44 24 ? 50
db EB

00CCE042: // 74 ? 8B CF C7 87 ? ? 00 00 01 00 00 00
db 90 90

[Disable]
00CCDFE7:
db 74

00CCE024:
db 7D

00CCE042:
db 74 22
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"No Knock Back"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//No KB
//EMS v92
//TheonlyTazz
[Enable]
00924A7B: //01 00 00 00 D8 D1 DF E0 F6 C4 05 7A 28 DC 91
db 00

[Disable]
00924A7B:
db 01
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"Perfect Loot"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Perfect Loot v92
//TheonlyTazz
[Enable]
00DEB99D:
db EB 07
0055B965:
db 25
00445C49:
db 00 00
[Disable]
00DEB63D:
db 6A 01
0055B965:
db 0D
00445C49:
db BC 02
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Unlimited Attack 2"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Credits to M1sniper for creating
//V92.1
//TheonlyTazz
[ENABLE]
alloc(UA,200)
label(exit)

004e8f8f:
jmp UA
nop


UA:
mov [eax],edi //orig code

push ebx
mov ebx,[1448298] // Char Base Pointer
cmp dword ptr [ebx+7D28], 5A // Attack Count offset
jl exit
add [eax],08

exit:
pop ebx
pop edi
mov [eax+04],ecx
jmp 004e8f8f+5


[DISABLE]
004e8f8f: //89 38 5F 89 48 04 5E C2 ? ? CC - 3rd result
mov [eax],edi
pop edi
mov [eax+04],ecx
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Unlimited Kaiser Morph"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Unlimited Kaiser Morph
//EMS v92
//updated by TheonlyTazz
[Enable]
00D327E7: //74 ? 81 FE ? ? ? ? 75 ? 8D ?? 24 1C 68
db EB 2E

00D33198: //7D ? 8D ? ? ? 68 ?? 24 00
db EB

[Disable]
00D327E7:
db 74 08

00D33198:
db 7D
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"DS IFS (Demon Slayer Instant Final Slash)"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[Enable]
//Credits To é£²æ°´æ©Ÿ
alloc(CRCDF,128)
CRCDF:
CMP [ESP+8],1D905C4
JNZ 00892C00 //&gt; it was wrong. That's the correct one.
MOV [ESP+8],1D909B0
JMP 00892C00

00D38976:
CALL CRCDF
00D347CF:
CALL CRCDF

[Disable]
00D38976:
CALL 00892C00
00D347CF:
CALL 00892C00
dealloc(CRCDF)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Mob Related"</Description>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Jump un. right"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
//Jump un. right
// Credits to Ation
//EMS v91
//updated by AncientLove
00D9F5AF: //0F 84 1B 01 00 00 83 BE 3C 01 00 00 00 0F 84 0E
jmp 00D9F82E //8B 8E ? ? 00 00 6A 01 E8 ? ? ? FF EB //jp 00D9FF4D
nop

[Disable]
00D9F5AF:
db 0F 84 1B 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"No Mob KB"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//No Mob KB v92
[Enable]
00924A7B:
db 00

[Disable]
00924A7B:
db 04
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Mob Disarm"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Mob Disarm v92
[Enable]
0076959A:
db 0F 84
[Disable]
0076959A:
db 0F 85
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Mob Freeze"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
//Mob Freeze
//EMS v92
//updated by AncientLove
007765A7: //77 ? 89 54 24 ? E9 ? ? ? FF
db EB
[Disable]
007765A7:
db 77
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Walk Unrandomize Right"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
//Walk Unrandomize Right
// Credits to Ation
//EMS v92
//updated by AncientLove
00D9F23B: // 0F 8F ? ? 00 00 83 BE ? ? 00 00 00 0F 84
jmp 00D9F2D5 // 6A 01 EB ? DB 86 ? ? 00 00 DC 5E
nop

[Disable]
00D9F23B:
db 0F 8F 9E 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"New Aggro Method"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by xScriptZx
//EMS 92.1
//New Aggro Method

[ENABLE]
alloc(Aggro,32)
alloc(Follow,64)

00750B23:
jmp Aggro
nop

Aggro:
mov [ecx+00000300],eax
jmp 00750B2F

0055A9CF:
jmp Follow
nop

Follow:
pop eax
mov [eax],edi
pop edi
mov [eax+04],ecx
jmp 0055A9D5

[DISABLE]
00750B23:
cmp [ecx+00000300],eax

0055A9CF:
mov [eax],edi
pop edi
mov [eax+04],ecx
pop esi

dealloc(Aggro)
dealloc(Follow)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"ETC."</Description>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"CPU Hack"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
//CPU Hack
//EMS v92
//updated by TheonlyTazz

00713EDB: //E8 ? ? ? FF C6 45 ? 17 85 F6 74 08
db 90 90 90 90 90
00718D92: //E8 ? ? ? FF 8B 06 8B 48 ? 56 C6 45 ? 03 FF D1 8B 75 ? 43
db 90 90 90 90 90
0071DA09: //E8 ? ? ? FF 8B 0E 8B 51 ? 56 C6 45 ? 07 FF D2
db 90 90 90 90 90
[Disable]
00713EDB:
db E8 80 5E FF FF
00718D92:
db E8 A9 CB FF FF
0071DA09:
db E8 52 D7 FF FF
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Hide Login Information"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//Hide Login Information
//EMS v92
//updated by TheonlyTazz
0050FA3C:
db EB
[DISABLE]
0050FA3C: //74 ** 80 38 ** 0F 85 ** ** ** ** 8B 86 ** ** ** ** 89 44 24 ** 85 C0 75 ** 68
db 74
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"No Backgrounds+Clouds"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
//No Backgrounds+Clouds
//Created by Tryst
//EMS v92
//updated by TheonlyTazz
00718D92: //E8 ?? ?? ?? ?? 8B 06 8B 48 ?? 56 C6 45 ?? ?? FF D1 8B 75 ?? 43
db 90 90 90 90 90

0071769B: // E8 ?? ?? ?? ?? 8B 06 8B 48 08 56 C7 44 24 34 FF FF FF FF FF D1 8B 4C 24 28 64 89 0D 00 00 00 00 59 5F 5E 5D 83 C4 24
db 90 90 90 90 90

[Disable]
00718D92: // "CMapLoadable_RestoreBack"
call 00713FA0// "CMapLoadable_MakeBack" //Original Opcode

0071769B:
call 0070D750
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"No Damage Shown"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//No DMG Shown v92
//TheonlyTazz

[Enable]
0046A240:
db 00
00751B6B:
db 90 E9
007492BA:
db EB
007492C7:
db EB
007492E2:
db EB
[Disable]
0046A240:
db 1F
00751B6B:
db 0F 84
007492BA:
db 7E
007492C7:
db 75
007492E2:
db 7D
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"PIC Typer"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//PIC Typer v92
//TheonlyTazz
[Enable]
008B2BC6://CSoftKeyboardDlg::OnKey
db 90 E9
008B21D5://CSoftKeyboardDlg::OnCreate
db 00
008B21EE://CSoftKeyboardDlg::OnCreate
call 50D440//CCtrlEdit::CCtrlEdit

[Disable]
008B2BC6:
db 0F 84
008B21D5:
db 01
008B21EE:
call 510FD0//CCtrlEditEx::CCtrlEditEx
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"Pin Typer"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Pin Typer v92
//TheonlyTazz
[Enable]
006EB556://0F 85 ?? ?? ?? ?? 68 ?? ?? ?? ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? 89 44 24 ?? C6 44 24 ?? ?? 85 C0 0F 84 ?? ?? ?? ?? 6A ?? 8B C8
db 0F 84
006ECC37://0F 85 ?? ?? ?? ?? 68 ?? ?? ?? ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? 89 44 24 ?? C7 44 24 ?? ?? ?? ?? ?? 85 C0 0F 84 ?? ?? ?? ?? 6A ?? 8B C8
db 0F 84
006EC6EE://CPinCodeDlg::OnCreate
db 90 90 90 90 90 90 90
[Disable]
006EB556:
db 0F 85
006ECC37:
db 0F 85
006EC6EE:
db 89 AC 24 A0 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"No Fadestages"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// No Fadestages
// EMS V92.1 TheonlyTazz
[ENABLE]

008B52A0: //6A ?? 68 ?? ?? ?? ?? 64 A1 ?? ?? ?? ?? 50 83 EC ?? 53 55 56 57 A1 ?? ?? ?? ?? 33 C4 50 8D 44 24 ?? 64 A3 ?? ?? ?? ?? A1 ?? ?? ?? ??
//4th result
db C2 04 00

008B5750: //6A ?? 68 ?? ?? ?? ?? 64 A1 ?? ?? ?? ?? 50 83 EC ?? 53 55 56 57 A1 ?? ?? ?? ?? 33 C4 50 8D 84 24 ?? ?? ?? ?? 64 A3 ?? ?? ?? ?? A1 ?? ?? ?? ?? 85 C0
db C2 04 00


[DISABLE]
008B52A0:
db 6A FF 68

008B5750:
db 6A FF 68
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Passless Logo skipper"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
// ByPassless Logo skipper
// Credits Redwinter
// Additional Credits Luna (bypass version)
// EMS v92.1 TheonlyTazz
01177AC0: // 4byte search for the addy the disable aob gives
dd 006FD250 //6A FF 68 ?? ?? ?? 00 64 A1 00 00 00 00 50 51 A1 ?? ?? ?? ?? 33 C4 50 8D 44 24 08 64 ?? 00 00 00 00 A1 ?? ?? ?? ?? 85 C0 75 ?? 68 ?? ?? ?? ?? E8


[disable]
01177AC0:
dd 006FEFA0 //80 79 ? 00 75 ? e9
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"CC-Bluebox Remove"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//cc-bluebox remove
//ems v92.1
//TheonlyTazz

005ADAF4:
db 90 90 90 90 90

005B2A46:
db 90 90 90 90 90

[DISABLE]
005ADAF4:
db E8 C7 35 7C 00

005B2A46:
db E8 75 E6 7B 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"SS Mouse Fly"</Description>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
alloc(hook,1024)
alloc(teletime,4)
label(return)
label(exit)

00D11B39: //e8 ? ? ? ? 8b d8 8d be ? ? 00 00 8d 4f
jmp hook
return:

teletime:
dd 0

hook:
call 00D51480 //orig opcode (GetTime)
pushad
//looking for the mouse click
mov ebx,[0144D1A0] //mouse ptr
// uncomment next 2 lines for mouse click fly
//cmp dword ptr[ebx+9E0],0c
//jne exit

//get mouse locations
mov ebx,[ebx+978]
mov eax,[ebx+8C]
mov ebx,[ebx+90]

//encrypt and set tele offsets
lea ecx,[esi+7af0] // no aob yet i usually just scroll down and match locations from last patch
push eax
call 00406E40 //cc 56 8b f1 8b 0d

lea ecx, [esi+7ae4]
push ebx
call 00406E40

lea ecx, [esi+7ACC]
push 00000001 //Probably dont need all the proceeding 0's but wthell
call 00406E40

exit:
popad
jmp return

[disable]
00D11B39:
call 00D51480

dealloc(hook)
dealloc(teletime)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
